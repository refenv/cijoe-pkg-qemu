---
doc: |
  This workflow demonstrates how to use qemu via cijoe in steps of

  * Build qemu from source (x86_64 and aarch64)
  * Install qemu
  * Provision a guest using a cloud-init image
    - inject "$HOME/.ssh/id_rsa.pub" into guest as authorized_keys
  * Start the guest
  * Run a command within the guest (via SSH)
  * Stop the guest again

  This is done via scripts, which in turn are utilizing helper-functions from
  cijoe.qemu.wrapper.

steps:
- name: build
  uses: qemu.build

- name: install
  uses: qemu.install

- name: cloudinit
  uses: qemu.guest_init_using_cloudinit_image

- name: start
  uses: qemu.guest_start_nvme
#  with:
#    nvme_img_root: "/tmp"

- name: check
  run: |
    hostname

- name: kill
  uses: qemu.guest_kill
