#cloud-config
disable_root: False
ssh_pwauth: True
chpasswd:
  list: |
    root:root
  expire: False
bootcmd:
- [ sh, -c, "sudo sed -i 's/^GRUB_CMDLINE_LINUX=\"/&intel_iommu=on /' /etc/default/grub" ]
- [ sh, -c, 'sudo update-grub' ]
package_update: true
package_upgrade: true
packages:
- htop
- lshw
- pciutils
write_files:
- path: /etc/systemd/system/mount-shared-kernel-dir.service
  content: |
    # MIT License
    #
    # Copyright (c) 2021 Omar Sandoval
    #
    # Permission is hereby granted, free of charge, to any person obtaining a copy
    # of this software and associated documentation files (the "Software"), to deal
    # in the Software without restriction, including without limitation the rights
    # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    # copies of the Software, and to permit persons to whom the Software is furnished
    # to do so, subject to the following conditions:
    #
    # The above copyright notice and this permission notice shall be included in
    # all copies or substantial portions of the Software.
    #
    # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
    # FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
    # OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    # WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
    # OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    #
    # Cribbed and slightly modified from a systemd unit-file created by Omar
    # Sandoval:
    #
    #    https://github.com/osandov/osandov-linux/blob/master/scripts/vm-modules-mounter.service
    #

    [Unit]
    Description=Mount shared kernel build dir
    DefaultDependencies=no
    After=systemd-remount-fs.service
    Before=local-fs-pre.target systemd-modules-load.service systemd-udevd.service kmod-static-nodes.service umount.target
    Conflicts=umount.target
    RefuseManualStop=true
    ConditionPathExists=!/lib/modules/%v/kernel

    [Install]
    WantedBy=local-fs-pre.target

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    ExecCondition=sh -c 'grep -q kernel_share /sys/bus/virtio/drivers/9pnet_virtio/virtio*/mount_tag'
    ExecStart=mount -t tmpfs -o mode=755,strictatime,x-mount.mkdir,x-initrd.mount tmpfs /lib/modules/%v
    ExecStart=mount -t 9p -o trans=virtio,ro,x-mount.mkdir,x-initrd.mount kernel_share /lib/modules/%v/build
    ExecStart=ln -s build/modules.order /lib/modules/%v/modules.order
    ExecStart=ln -s build/modules.builtin /lib/modules/%v/modules.builtin
    ExecStart=ln -s build /lib/modules/%v/kernel
    ExecStart=-depmod %v
    ExecStopPost=sh -c 'if mountpoint -q /lib/modules/%v/build; then umount -l /lib/modules/%v/build; fi'
    ExecStopPost=sh -c 'if mountpoint -q /lib/modules/%v; then umount -l /lib/modules/%v; fi'
    ExecStopPost=find /lib/modules -mindepth 1 -maxdepth 1 -type d -empty -delete
    ExecReload=-depmod %v
runcmd:
  - sed -i -e 's/^.*PermitRootLogin.*$/PermitRootLogin yes/g' /etc/ssh/sshd_config
  - sed -i -e 's/^.*PermitEmptyPasswords.*$/PermitEmptyPasswords yes/g' /etc/ssh/sshd_config
  - sed -i -e 's/^.*PasswordAuthentication.*$/PasswordAuthentication yes/g' /etc/ssh/sshd_config
  - service ssh restart
  - systemctl daemon-reload
  - systemctl enable mount-shared-kernel-dir.service
final_message: "The system is up, after $UPTIME seconds"
power_state:
  mode: poweroff
  message: So long and thanks for all the fish
  timeout: 30
  condition: True
